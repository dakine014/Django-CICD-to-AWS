# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-to-AWS-ElastikBeanstalk
env:
  EB_Package_S3_Bucket_Name : "dakine014-django-application-packages"
  EB_Application_Name       : "MyDjango" 
  EB_Environment_Name       : "MyDjango-env" 
  Deploy_Package_Name       : "django_app_${{ github.sha }}.zip"
  AWS_Region_Name           : "us-west-2"  
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  my_ci_part:
  # This workflow contains a single job called "build"
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Git clone our repo
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Create Zip deployment package
      run : zip -r ${{ env.Deploy_Package_Name }} ./ -x *.git*
    #Authentication - делаем доступ
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id    : ${{ secrets.My_AWS_Access_Key }}
        aws-secret-access-key: ${{ secrets.My_AWS_Secret_Key }}
        aws-region           : ${{ env.AWS_Region_Name }}
        
    - name: Copy Deployment package to S3 bucket
      run: aws s3 cp ${{ env.Deploy_Package_Name }} s3://${{ env.EB_Package_S3_Bucket_Name }}/
    
    - name: Print Happy Message for CI Finish
      run: echo "CI Pipeline part Finished Successfully"

  my_cd_part:
  # This workflow contains a single job called "build"
    runs-on: ubuntu-latest
    needs: [my_ci_part]

    steps:
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id    : ${{ secrets.My_AWS_Access_Key }}
        aws-secret-access-key: ${{ secrets.My_AWS_Secret_Key }}
        aws-region           : ${{ env.AWS_Region_Name }}
        
    - name: Create new ElastikBeanstalk Application Version
      run : |
        aws elasticbeanstalk create-application-version \
        --application-name ${{ env.EB_Application_Name }} \
        --source-bundle S3Bucket="${{ env.EB_Package_S3_Bucket_Name }}", S3Key="${{ env.Deploy_Package_Name }}" \
        --version-label "Ver-${{ github.sha }}" \
        --description "CoimmitSHA-$ {{ github.sha }}"
       
    - name: Deploy new ElasticBeanstalk Application Version
      run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_Environment_Name }} --version-label "Ver-${{ github.sha }}"
        
    - name: Print Happy Message for CD Finish
      run: echo "CD Pipeline part Finished Successfully"
        
